## -- General Settings ----------------------------------------------------------
#set -g buffer-limit 20
#set -g default-terminal 'screen-256color'
#set -g default-command "$SHELL -login"
#set -g default-shell $SHELL
#set -g display-time 1500
#set -sg escape-time 0
#set -s focus-events on
#set -g history-limit 500000
#set -g remain-on-exit off
#set -g repeat-time 1000
#setw -q -g utf8 on
#setw -g allow-rename off
#setw -g automatic-rename off
#setw -g aggressive-resize on

# Change prefix key to C-space
unbind C-b
set -g prefix C-space
bind-key C-space send-prefix

# Automatically set window title
set-option -g set-titles on
set -g set-titles-string "#I:#W"

set -g default-command $SHELL

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on
#-------------------------------------------------------------------------------

# -- Key Bindings --------------------------------------------------------------
unbind r
unbind R
unbind v
unbind h
unbind n
unbind w
unbind k
unbind C-t
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
#unbind }    # swap-pane -D
#unbind {    # swap-pane -U
unbind "'"  # select-window
#bind n    # next-window
#bind p    # previous-window
#bind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
#bind &    # kill-window
#bind "#"  # list-buffer
#bind =    # choose-buffer
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left

bind C-m send-keys 'C-l'

# Reload tmux configuration
bind C-t source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"
bind Q kill-window

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

#bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

bind -r BTab previous-window
bind -r Tab next-window
bind "\\" split-window -h -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"
bind "|" split-window -fh -c "#{pane_current_path}"
bind "_" split-window -fv -c "#{pane_current_path}"


# Vim style pane selection
#bind -n C-h select-pane -L
#bind -n C-j select-pane -D
#bind -n C-k select-pane -U
#bind -n C-l select-pane -R


# Vim style pane selection (Fallback)
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

bind < swap-window -d -t -1
bind > swap-window -d -t +1

#bind j resize-pane -y 100%
#bind k resize-pane -y 100%
#bind h resize-pane -x 100%
#bind l resize-pane -x 100%
bind -r Left resize-pane -L +50
bind -r Down resize-pane -D +5
bind -r Up resize-pane -U +5
bind -r Right resize-pane -R +5
# -- ---------------------------------------------------------------------------

set -g @themepack 'powerline/double/orange'

## 0 is too far from ` ;)
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip-in-selection clipboard' #"reattach-to-user-namespace pbcopy"

# display additional sessions in popup menu
#bind C-u display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
# bind -n C-p switch-client -p
# bind -n C-n switch-client -n
bind C-p switch-client -p
bind C-n switch-client -n

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version = 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


#set -g status-keys vi

#setw -g monitor-activity on

# THEME
#set -g status-style bg=black
#set -g status-style fg=white
#set -g window-status-current-style bg=white
#set -g window-status-current-style fg=black
##set -g window-status-current-style attr=bold
#set -g status-interval 60
#set -g status-left-length 30
#set -g status-left '#[fg=green](#S) #(whoami) '
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'
#
#set-option -g default-command "reattach-to-user-namespace -l zsh"
#
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim

## Update default binding of `Enter` to also use copy-pipe
## unbind -t vi-copy Enter
## bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
#bind-key t split-window -h "vim ~/todo.md"
#bind-key d split-window -h -c ~/code/devcamp "reattach-to-user-namespace vim"
set-option -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY GEM_HOME GEM_PATH MY_RUBY_HOME PATH"

set -g @plugin 'xamut/tmux-spotify'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'swaroopch/tmux-pomodoro'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'jimeh/tmux-themepack'

run '~/.tmux/plugins/tpm/tpm'
#-------------------------------------------------------------------------------
# Fig Tmux Integration: Enabled
# source-file ~/.fig/tmux
# End of Fig Tmux Integration
